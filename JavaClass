package com.example.manel.mimi;

import android.util.Log;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.util.Iterator;

import org.apache.http.HttpEntity;
import org.apache.http.HttpResponse;
import org.apache.http.StatusLine;
import org.apache.http.client.ClientProtocolException;
import org.apache.http.client.methods.HttpGet;
import org.apache.http.impl.client.DefaultHttpClient;
import  org.json.JSONArray ;
import org.apache.http.client.HttpClient;
import org.json.JSONException;
import org.json.JSONObject;

public class JSONParser {
    static InputStream iStream = null;
    static JSONArray jarray = null;
    static String json = "";

    public JSONParser() {

    }

    public JSONObject getJSONFormUrl(String url) throws JSONException {

        StringBuilder builder = new StringBuilder();
        HttpClient client = new DefaultHttpClient();
        HttpGet httpGet = new HttpGet(url);
        try {
            HttpResponse response = client.execute(httpGet);
            StatusLine statusLine = response.getStatusLine();
            int statusCode = statusLine.getStatusCode();

            if (statusCode == 200) {
                HttpEntity entity = response.getEntity();
                InputStream content = entity.getContent();
                BufferedReader reader = new BufferedReader(new InputStreamReader(content));
                String line;
                while ((line = reader.readLine()) != null) {
                    builder.append(line);
                }
            } else
                Log.e("==>", " Failed to downold");


        } catch (ClientProtocolException e) {
            e.printStackTrace();
        } catch (IOException e) {
            e.printStackTrace();
        }
        try {
            jarray = new JSONArray(builder.toString());
        } catch (JSONException e) {
            Log.e("Json Parser", "Error Data" + e.toString());
        }
        JSONObject innInnerObj = null;
        JSONObject obj2 = new JSONObject();
        obj2.put("Response", "success");
        jarray.put(obj2);
        JSONObject obj = new JSONObject();
        obj.put("status", jarray);
        JSONObject innerJson = new JSONObject(obj.toString());

        Iterator<String> it = obj.keys();
        while (it.hasNext()) {
            String keys = it.next();
            innerJson = new JSONObject(obj.toString());

            for (int i = 0; i < jarray.length(); i++) {
                innInnerObj = jarray.getJSONObject(i);
                Iterator<String> InnerIterator = innInnerObj.keys();
                while (InnerIterator.hasNext()) {
                    System.out.println("InnInnerObject value is :" + innInnerObj.get(InnerIterator.next()));
                }
            }
        }

            return innInnerObj;
    }
    }

